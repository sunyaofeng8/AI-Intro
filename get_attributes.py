# -*- coding: utf-8 -*-

from facepp_API import connect_to_facepp
import numpy as np


def Attribute(filepath, occu_rate = 0):
    '''
    Given the file path of the image, return the attribute (like gender, age) which is a string.
    The attributes are generated by Face++.

    If occu_rate（上镜率） > 0, which is the size of the face divides the size of the raw images, then return a complete attributes(used in Part II).
    Else return a brief attributes(used in Part III, DLGAN)

    Please see the document of Face++ website to know the stucture of the json file.
    '''

    faces = connect_to_facepp(filepath)
    if len(faces) != 1:
        return "过于惊艳～" # can't find any faces.
    
    face = faces[0]
    attr = face['attributes']

    # Brief Attributes
    attr_str = ""
    attr_str += '性别: ' + ('小哥哥' if attr['gender']['value'] == 'Male' else '小姐姐') + '\n'
    attr_str += '年龄: ' + str(attr['age']['value']) + '\n'
    attr_str += '颜值: ' + str(int(attr['beauty']['female_score'] + attr['beauty']['male_score'])) + '\n'
    
    # Complete Attributes
    if occu_rate > 0:
        attr_str += '占比: ' + str(int(occu_rate * 10000) / 10000) + '\n' # %.4f

        # Get emotion
        emo = attr['emotion']
        emo_list = ['宝宝心里苦', '没有表情的杀手', '嫌弃脸', '不愧是我', '震惊', '害怕', '朴实的快乐']
        score = np.array([emo['sadness'], emo['neutral'], emo['disgust'], emo['anger'], emo['surprise'], emo['fear'], emo['happiness']])

        text = emo_list[score.argmax()]
        attr_str += '情绪: ' + text + '\n'

        # Get simile
        smile = attr['smile']['value'] / attr['smile']['threshold']
        if smile < 0.2:
            text = '我就是不笑'
        elif smile < 0.7:
            text = '微微一笑，生活还是很美好'
        elif smile < 1.3:
            text = '优雅而不失风度的笑'
        elif smile < 1.8:
            text = '喜欢你爱笑的眼睛'
        else:
            text = '真像一朵绽开的红山茶～'
        attr_str += '笑容: ' + text + '\n'

        # Get Glasses
        if attr['glass']['value'] == 'None':
            text = '不戴眼镜的你显得如此深沉'
        elif attr['glass']['value'] == 'Normal':
            text = '我喜欢你的黑框眼镜'
        else:
            text = '你一定是真的粉丝'
        attr_str += '眼镜: ' + text + '\n'

    return attr_str # a string

if __name__ == '__main__':
    print(Attribute('face/face0.png'))